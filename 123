#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_BOOKS 100 // 最大图书数量
#define MAX_ADMINS 10 // 最大管理员数量

// 图书信息结构体
struct Book {
    char title[50];     // 书名
    char author[50];    // 作者
    char publisher[50]; // 出版社
    int year;           // 出版年份
    int id;             // 图书编号
    int stock;          // 库存
};

// 管理员信息结构体
struct Admin {
    char username[50]; // 用户名
    char password[50]; // 密码
};

// 全局变量
struct Book books[MAX_BOOKS];
int bookCount = 0;
struct Admin admins[MAX_ADMINS];
int adminCount = 0;

// 函数声明
void menu();
void addBook();
void displayBooks();
void searchBook();
void modifyBook();
void deleteBook();
void saveBooks();
void loadBooks();
void saveAdmins();
void loadAdmins();
int login();
void registerAdmin();

int main() {
    loadBooks();  // 加载之前保存的图书信息
    loadAdmins(); // 加载之前保存的管理员信息

    menu(); // 显示菜单

    saveBooks();  // 保存图书信息
    saveAdmins(); // 保存管理员信息
    return 0;
}

// 显示菜单
void menu() {
    int choice;
    do {
        printf("\n--- 学生信息管理系统 ---\n");
        printf("1. 添加学生信息\n");
        printf("2. 显示所有学生信息\n");
        printf("3. 查找学生信息\n");
        printf("4. 修改学生信息\n");
        printf("5. 删除学生信息\n");
        printf("6. 退出\n");
        printf("请选择操作：");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                addBook();
                break;
            case 2:
                displayBooks();
                break;
            case 3:
                searchBook();
                break;
            case 4:
                modifyBook();
                break;
            case 5:
                deleteBook();
                break;
            case 6:
                printf("谢谢使用！\n");
                break;
            default:
                printf("无效的选择，请重新输入！\n");
                break;
        }
    } while (choice != 6);
}

// 添加学生信息
void addBook() {
    if (bookCount == MAX_BOOKS) {
        printf("学生信息数量已达上限，无法添加！\n");
        return;
    }

    struct Book book;
    printf("\n--- 添加学生信息 ---\n");
    printf("请输入姓名：");
    scanf("%s", book.title);
    printf("请输入学号：");
    scanf("%d", &book.id);
    printf("请输入性别（男/女）：");
    scanf("%s", book.author);
    printf("请输入年龄：");
    scanf("%d"&book.age);
// 修改图书信息
void modifyBook() {
   if (bookCount == 0) {
       printf("当前没有任何书籍！\n");
       return;
}
int id;
printf("\n--- 修改图书信息 ---\n");
printf("请输入要修改的图书编号：");
scanf("%d", &id);

for (int i = 0; i < bookCount; i++) {
    if (books[i].id == id) {
        printf("请输入新的书名：");
        scanf("%s", books[i].title);
        printf("请输入新的作者：");
        scanf("%s", books[i].author);
        printf("请输入新的出版社：");
        scanf("%s", books[i].publisher);
        printf("请输入新的出版年份：");
        scanf("%d", &books[i].year);
        printf("请输入新的库存数量：");
        scanf("%d", &books[i].stock);

        printf("图书信息修改成功！\n");
        return;
    }
}

printf("未找到该图书编号的书籍！\n");
}

// 删除图书信息
void deleteBook() {
    if (bookCount == 0) {
        printf("当前没有任何书籍！\n");
        return;
}
int id;
printf("\n--- 删除图书信息 ---\n");
printf("请输入要删除的图书编号：");
scanf("%d", &id);

for (int i = 0; i < bookCount; i++) {
    if (books[i].id == id) {
        // 将数组中该位置后面的元素全部向前移动一个位置
        for (int j = i; j < bookCount - 1; j++) {
            books[j] = books[j + 1];
        }

        bookCount--; // 图书数量减少
        printf("图书信息删除成功！\n");
        return;
    }
}

printf("未找到该图书编号的书籍！\n");
}

// 保存图书信息
void saveBooks() {
FILE *file = fopen("books.dat", "wb");
if (file == NULL) {
printf("无法打开文件！\n");
return;
}
fwrite(&bookCount, sizeof(int), 1, file); // 先写入图书数量

for (int i = 0; i < bookCount; i++) {
    fwrite(&books[i], sizeof(struct Book), 1, file); // 逐个写入图书信息
}

fclose(file);
printf("图书信息保存成功！\n");
}

// 加载存储的图书信息
void loadBooks() {
FILE *file = fopen("books.dat", "rb");
if (file == NULL) {
return;
}
fread(&bookCount, sizeof(int), 1, file); // 先读取图书数量

for (int i = 0; i < bookCount; i++) {
    fread(&books[i], sizeof(struct Book), 1, file); // 逐个读取图书信息
}

fclose(file);
int main() {
    loadBooks();     // 加载之前保存的书籍信息
    loadAdmins();    // 加载之前保存的管理员信息

    int choice;
    do {
        printf("\n--- 图书管理系统 ---\n");
        printf("1. 登录管理员账号\n");
        printf("2. 注册管理员账号\n");
        printf("3. 查询图书信息\n");
        printf("4. 添加图书信息\n");
        printf("5. 修改图书信息\n");
        printf("6. 删除图书信息\n");
        printf("7. 退出\n");
        printf("请选择操作：");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                login();
                break;
            case 2:
                registerAdmin();
                break;
            case 3:
                searchBook();
                break;
            case 4:
                addBook();
                break;
            case 5:
                modifyBook();
                break;
            case 6:
                deleteBook();
                break;
            case 7:
                printf("谢谢使用！\n");
                break;
            default:
                printf("无效的选择，请重新输入！\n");
                break;
        }
    } while (choice != 7);

    saveBooks();    // 保存书籍信息
    saveAdmins();   // 保存管理员信息

    return 0;
}
